{"version":3,"file":"template-library/index.js","mappings":"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","sources":["webpack://zoloblocks/./src/template-library/inner-template.js","webpack://zoloblocks/./src/template-library/page-templates/index.js","webpack://zoloblocks/./src/template-library/page-templates/inner-page-template.js","webpack://zoloblocks/./src/template-library/page-templates/pages-preview.js","webpack://zoloblocks/./src/template-library/page-templates/single-page-template.js","webpack://zoloblocks/./src/template-library/preloader.js","webpack://zoloblocks/./src/template-library/pro-popup.js","webpack://zoloblocks/./src/template-library/template-loader.js","webpack://zoloblocks/./src/template-library/library.scss?d73f","webpack://zoloblocks/./src/template-library/page-templates.scss?2476","webpack://zoloblocks/./src/template-library/preloader.scss?ac50","webpack://zoloblocks/./node_modules/react-dom/client.js","webpack://zoloblocks/external window \"ReactDOM\"","webpack://zoloblocks/external window \"ReactJSXRuntime\"","webpack://zoloblocks/external window [\"wp\",\"apiFetch\"]","webpack://zoloblocks/external window [\"wp\",\"components\"]","webpack://zoloblocks/external window [\"wp\",\"data\"]","webpack://zoloblocks/external window [\"wp\",\"element\"]","webpack://zoloblocks/external window [\"wp\",\"i18n\"]","webpack://zoloblocks/external window [\"wp\",\"plugins\"]","webpack://zoloblocks/external window [\"wp\",\"richText\"]","webpack://zoloblocks/./node_modules/classnames/index.js","webpack://zoloblocks/webpack/bootstrap","webpack://zoloblocks/webpack/runtime/compat get default export","webpack://zoloblocks/webpack/runtime/define property getters","webpack://zoloblocks/webpack/runtime/hasOwnProperty shorthand","webpack://zoloblocks/webpack/runtime/make namespace object","webpack://zoloblocks/./src/template-library/index.js"],"sourcesContent":["import { Tooltip } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport classNames from 'classnames';\n\nimport ProPopup from './pro-popup';\n\nconst InnerTemplate = ({ templates, handleImportTemplate, favIds, handleFavTemplate }) => {\n    return (\n        <div className=\"zolo-demos-wrapper\">\n            {templates &&\n                templates?.length > 0 &&\n                templates.map((template, index) => {\n                    return (\n                        <div className=\"single-demo\" key={index}>\n                            <div className=\"demo-preview\">\n                                {template?.demo_preview && (\n                                    <img src={template.demo_preview} alt={template?.title} loading=\"lazy\" decoding=\"async\" />\n                                )}\n\n                                <>\n                                    {template?.status === 'pro' && zoloParams?.zolo_pro_status === 'inactive' && (\n                                        <div className=\"demo-actions-btn-wrap\">\n                                            {template?.demo_link && (\n                                                <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                    <a className=\"demo-btn view-btn\" href={template?.demo_link} target=\"_blank\">\n                                                        {__('Demo', 'zoloblocks')}\n                                                        <svg\n                                                            aria-hidden=\"true\"\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                                            width={24}\n                                                            height={24}\n                                                            fill=\"none\"\n                                                            viewBox=\"0 0 24 24\"\n                                                        >\n                                                            <path\n                                                                stroke=\"currentColor\"\n                                                                strokeWidth={2}\n                                                                d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                            />\n                                                            <path\n                                                                stroke=\"currentColor\"\n                                                                strokeWidth={2}\n                                                                d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                            />\n                                                        </svg>\n                                                    </a>\n                                                </Tooltip>\n                                            )}\n                                            <ProPopup />\n                                        </div>\n                                    )}\n                                </>\n\n                                <div className=\"demo-actions-btn-wrap\">\n                                    {template?.status === 'pro' ? (\n                                        <>\n                                            {\n                                                // check if the user has ZoloBlocks Pro\n                                                zoloParams?.zolo_pro_status === 'active' && (\n                                                    <>\n                                                        {template?.demo_link && (\n                                                            <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                                <a className=\"demo-btn view-btn\" href={template?.demo_link} target=\"_blank\">\n                                                                    {__('Demo', 'zoloblocks')}\n                                                                    <svg\n                                                                        aria-hidden=\"true\"\n                                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                                        width={24}\n                                                                        height={24}\n                                                                        fill=\"none\"\n                                                                        viewBox=\"0 0 24 24\"\n                                                                    >\n                                                                        <path\n                                                                            stroke=\"currentColor\"\n                                                                            strokeWidth={2}\n                                                                            d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                                        />\n                                                                        <path\n                                                                            stroke=\"currentColor\"\n                                                                            strokeWidth={2}\n                                                                            d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                                        />\n                                                                    </svg>\n                                                                </a>\n                                                            </Tooltip>\n                                                        )}\n\n                                                        <Tooltip text={__('Import Demo', 'zoloblocks')} placement=\"top\">\n                                                            <button\n                                                                className=\"demo-btn import-btn\"\n                                                                onClick={() => handleImportTemplate(template?.json_file)}\n                                                            >\n                                                                {__('Import', 'zoloblocks')}\n                                                                <svg\n                                                                    aria-hidden=\"true\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                    width={24}\n                                                                    height={24}\n                                                                    fill=\"none\"\n                                                                    viewBox=\"0 0 24 24\"\n                                                                >\n                                                                    <path\n                                                                        stroke=\"currentColor\"\n                                                                        strokeLinecap=\"round\"\n                                                                        strokeLinejoin=\"round\"\n                                                                        strokeWidth={2}\n                                                                        d=\"M4 15v2a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-2m-8 1V4m0 12-4-4m4 4 4-4\"\n                                                                    />\n                                                                </svg>\n                                                            </button>\n                                                        </Tooltip>\n                                                    </>\n                                                )}\n                                        </>\n                                    ) : (\n                                        <>\n                                            {template?.demo_link && (\n                                                <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                    <a className=\"demo-btn view-btn\" href={template?.demo_link} target=\"_blank\">\n                                                        {__('Demo', 'zoloblocks')}\n                                                        <svg\n                                                            aria-hidden=\"true\"\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                                            width={24}\n                                                            height={24}\n                                                            fill=\"none\"\n                                                            viewBox=\"0 0 24 24\"\n                                                        >\n                                                            <path\n                                                                stroke=\"currentColor\"\n                                                                strokeWidth={2}\n                                                                d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                            />\n                                                            <path\n                                                                stroke=\"currentColor\"\n                                                                strokeWidth={2}\n                                                                d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                            />\n                                                        </svg>\n                                                    </a>\n                                                </Tooltip>\n                                            )}\n\n                                            <Tooltip text={__('Import Demo', 'zoloblocks')} placement=\"top\">\n                                                <button\n                                                    className=\"demo-btn import-btn\"\n                                                    onClick={() => handleImportTemplate(template?.json_file)}\n                                                >\n                                                    {__('Import', 'zoloblocks')}\n                                                    <svg\n                                                        aria-hidden=\"true\"\n                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                        width={24}\n                                                        height={24}\n                                                        fill=\"none\"\n                                                        viewBox=\"0 0 24 24\"\n                                                    >\n                                                        <path\n                                                            stroke=\"currentColor\"\n                                                            strokeLinecap=\"round\"\n                                                            strokeLinejoin=\"round\"\n                                                            strokeWidth={2}\n                                                            d=\"M4 15v2a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-2m-8 1V4m0 12-4-4m4 4 4-4\"\n                                                        />\n                                                    </svg>\n                                                </button>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                </div>\n                                <Tooltip\n                                    text={\n                                        Array.isArray(favIds) && favIds.includes(template.id)\n                                            ? __('Remove from Favorite', 'zoloblocks')\n                                            : __('Add to Favorite', 'zoloblocks')\n                                    }\n                                    placement=\"top\"\n                                ></Tooltip>\n                            </div>\n                            <div className=\"demo-footer\">\n                                <div className=\"footer-left\">\n                                    <h2 className=\"demo-title\">{template.title}</h2>\n                                    <button\n                                        onClick={() => handleFavTemplate(template.id)}\n                                        className={Array.isArray(favIds) && favIds.includes(template.id) ? 'fav-btn active' : 'fav-btn'}\n                                    >\n                                        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"fav\">\n                                            <path d=\"M16.5 3C19.5376 3 22 5.5 22 9C22 16 14.5 20 12 21.5C9.5 20 2 16 2 9C2 5.5 4.5 3 7.5 3C9.35997 3 11 4 12 5C13 4 14.64 3 16.5 3Z\" />\n                                        </svg>\n                                        <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"not-fav\">\n                                            <path d=\"M16.5 3C19.5376 3 22 5.5 22 9C22 16 14.5 20 12 21.5C9.5 20 2 16 2 9C2 5.5 4.5 3 7.5 3C9.35997 3 11 4 12 5C13 4 14.64 3 16.5 3ZM12.9339 18.6038C13.8155 18.0485 14.61 17.4955 15.3549 16.9029C18.3337 14.533 20 11.9435 20 9C20 6.64076 18.463 5 16.5 5C15.4241 5 14.2593 5.56911 13.4142 6.41421L12 7.82843L10.5858 6.41421C9.74068 5.56911 8.5759 5 7.5 5C5.55906 5 4 6.6565 4 9C4 11.9435 5.66627 14.533 8.64514 16.9029C9.39 17.4955 10.1845 18.0485 11.0661 18.6038C11.3646 18.7919 11.6611 18.9729 12 19.1752C12.3389 18.9729 12.6354 18.7919 12.9339 18.6038Z\" />\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                            <span className={classNames('demo-badge', `${template?.status === 'pro' ? 'pro' : 'free'}-badge`)}>\n                                {template?.status === 'pro' ? __('Pro', 'zoloblocks') : __('Free', 'zoloblocks')}\n                            </span>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default InnerTemplate;\n","import { Tooltip } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nimport classNames from 'classnames';\n\nimport InnerPageTemplate from './inner-page-template';\n\nconst PageTemplateLoader = ({\n    TABS,\n    activeTab,\n    setActiveTab,\n    searchText,\n    setSearchText,\n    pullDemos,\n    setPullDemos,\n    pullNewDemos,\n    setIsOpen,\n    number,\n    setNumber,\n    loading,\n    handleImportTemplate,\n    // specific to items\n    type,\n    setType,\n    categories,\n    activeCat,\n    setActiveCat,\n    allItems,\n    items,\n    setItems,\n    // favorites\n    favIds,\n    handleFavTemplate,\n}) => {\n    let itemText = '';\n    switch (activeTab) {\n        case 'pages':\n            itemText = 'Pages';\n            break;\n        case 'demos':\n            itemText = 'Demos';\n            break;\n        case 'templates':\n            itemText = 'Templates';\n            break;\n        case 'favorites':\n            itemText = 'Favorites Items';\n            break;\n        default:\n            itemText = 'Patterns';\n            break;\n    }\n\n    return (\n        <>\n            <div className=\"categories\">\n                <div className=\"demo-made-button\">\n                    <button className=\"demo-made-btn made-zoloblocks-btn\">{__('hand craft', 'zoloblocks')}</button>\n                    <button className=\"demo-made-btn made-ai-btn\" title=\"upcoming\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path\n                                d=\"M14.0712 9.69993L14.9982 7.55057C15.152 7.19386 15.6539 7.19843 15.8014 7.55789L16.6354 9.59063C17.172 10.8987 18.2031 11.9386 19.5112 12.4441C20.2436 12.7271 20.9451 12.9933 21.726 13.3027C22.097 13.4496 22.0896 13.979 21.716 14.1188L19.6811 14.8802C18.2774 15.4055 17.1629 16.513 16.619 17.9233L15.8161 20.0053C15.6715 20.3804 15.1465 20.3798 15.0025 20.0045L14.2087 17.9342C13.6895 16.58 12.6432 15.5009 11.3145 14.9493L9.33125 14.1259C8.97253 13.977 8.96964 13.4642 9.32666 13.3112L11.3146 12.4589C12.5487 11.9299 13.5353 10.9424 14.0712 9.69993Z\"\n                                fill=\"black\"\n                            />\n                            <path\n                                d=\"M6.01488 3.07497L6.36536 2.26453C6.51939 1.90834 7.02058 1.91291 7.16823 2.27186L7.45362 2.96564C7.9915 4.2732 9.02484 5.3084 10.3342 5.81066C10.5983 5.91198 10.8636 6.01393 11.14 6.12187C11.512 6.26717 11.505 6.79641 11.1309 6.93603L10.5019 7.17075C9.09773 7.69476 7.98233 8.80125 7.43724 10.2109L7.18294 10.8686C7.0381 11.2431 6.51378 11.2426 6.36966 10.8678L6.11046 10.1936C5.59 8.83976 4.54261 7.76153 3.21341 7.21116L2.56601 6.9431C2.20678 6.79436 2.20389 6.28094 2.56142 6.12807L3.25573 5.83122C4.49031 5.30336 5.47779 4.31692 6.01488 3.07497Z\"\n                                fill=\"black\"\n                            />\n                            <path\n                                d=\"M4.71182 15.9861L4.7511 15.8956C4.88762 15.5812 5.33013 15.5852 5.461 15.9021C5.93846 17.0583 6.85588 17.9676 8.01378 18.4132L8.10773 18.4495C8.42754 18.573 8.4217 19.0269 8.10037 19.1463C6.89622 19.5939 5.93558 20.5497 5.46676 21.7574C5.34152 22.08 4.88724 22.0809 4.76262 21.7581C4.30772 20.5795 3.39184 19.6358 2.2334 19.158C1.91983 19.0287 1.92376 18.5778 2.23586 18.4449C3.33693 17.976 4.23152 17.0924 4.71182 15.9861Z\"\n                                fill=\"black\"\n                            />\n                        </svg>\n                        ai\n                        <span>{__('upcoming', 'zoloblocks')}</span>\n                    </button>\n                </div>\n                <div className=\"demo-title-proFree-wrap\">\n                    <h2 className=\"category-title\">{__('Categories', 'zoloblocks')}</h2>\n                    <div className=\"demo-proFree-btn\">\n                        {type !== '' && (\n                            <Tooltip>\n                                <button\n                                    className=\"demo-pro-free-reset\"\n                                    onClick={() => {\n                                        setType('');\n                                    }}\n                                >\n                                    <svg\n                                        className=\"w-6 h-6 text-gray-800 dark:text-white\"\n                                        aria-hidden=\"true\"\n                                        width={24}\n                                        height={24}\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                    >\n                                        <path\n                                            stroke=\"currentColor\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth={2}\n                                            d=\"M17.651 7.65a7.131 7.131 0 0 0-12.68 3.15M18.001 4v4h-4m-7.652 8.35a7.13 7.13 0 0 0 12.68-3.15M6 20v-4h4\"\n                                        />\n                                    </svg>\n                                </button>\n                            </Tooltip>\n                        )}\n                        <button\n                            className=\"demo-free-btn\"\n                            onClick={() => {\n                                setType('free');\n                            }}\n                        >\n                            {__('free', 'zoloblocks')}\n                        </button>\n                        <button\n                            className=\"demo-pro-btn\"\n                            onClick={() => {\n                                setType('pro');\n                            }}\n                        >\n                            {__('pro', 'zoloblocks')}\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"category-list\">\n                    {categories &&\n                        categories?.length > 0 &&\n                        categories?.map((category) => (\n                            <button\n                                key={category?.value}\n                                className={classNames('single-category', {\n                                    active: activeCat === category?.value,\n                                })}\n                                onClick={() => setActiveCat(category?.value)}\n                            >\n                                <span className=\"single-category-text\">{category?.label}</span>\n                                {category?.value === 'all' && <span className=\"single-category-count\">{allItems && allItems?.length}</span>}\n                            </button>\n                        ))}\n                </div>\n            </div>\n            <div className=\"demos-container\">\n                <div className=\"zolo-dm-head\">\n                    <div className=\"logo-area\">\n                        <svg width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M15.6827 10.8669L18.9688 7.58074L18.9405 7.55241C20.7819 8.94051 22 11.0085 22 13.4448C22 15.7677 21.1785 18.204 19.5637 19.6771C17.9207 21.1785 15.9093 21.915 13.5014 21.915L6.64589 21.9433H2V14.1246L14.1813 2H20.9235L6.36261 16.3343H13.5297C14.4079 16.3343 15.1728 16.0227 15.7677 15.4278C16.3909 14.8045 16.7592 14.0113 16.7592 13.0765C16.7592 12.2833 16.1643 11.4051 15.6827 10.8669ZM2.02869 10.3003V2H10.3573L2.02869 10.3003Z\"\n                                fill=\"#2667FF\"\n                            />\n                        </svg>\n                        <div className=\"logo-text\">{__('Template Library', 'zoloblocks')}</div>\n                    </div>\n                    <div className=\"tabs-area\">\n                        {TABS &&\n                            TABS.map((tab) => (\n                                <button\n                                    key={tab.value}\n                                    className={classNames('single-tab', { active: activeTab === tab.value })}\n                                    onClick={() => setActiveTab(tab.value)}\n                                >\n                                    {tab.label}\n                                </button>\n                            ))}\n                    </div>\n                    <div className=\"search-close-area\">\n                        <div className=\"search\">\n                            <input\n                                type=\"search\"\n                                placeholder={__('Search', 'zoloblocks')}\n                                value={searchText}\n                                onChange={(e) => setSearchText(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"sync-btn\">\n                            <Tooltip text={__('Sync Demos', 'zoloblocks')} placement=\"top\">\n                                <button\n                                    className=\"sync-button\"\n                                    onClick={() => {\n                                        setPullDemos(!pullDemos);\n                                        pullNewDemos();\n                                        setSearchText('');\n                                    }}\n                                >\n                                    <svg\n                                        className=\"w-6 h-6 text-gray-800 dark:text-white\"\n                                        aria-hidden=\"true\"\n                                        width=\"24\"\n                                        height=\"24\"\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                    >\n                                        <path\n                                            stroke=\"currentColor\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth=\"2\"\n                                            d=\"M17.651 7.65a7.131 7.131 0 0 0-12.68 3.15M18.001 4v4h-4m-7.652 8.35a7.13 7.13 0 0 0 12.68-3.15M6 20v-4h4\"\n                                        />\n                                    </svg>\n                                </button>\n                            </Tooltip>\n                        </div>\n                        <div className=\"close-btn\">\n                            <button onClick={() => setIsOpen(false)}>\n                                <svg viewBox=\"0 0 24 24\" width={24} height={24} color={'#000000'} fill={'none'}>\n                                    <path\n                                        d=\"M19.0005 4.99988L5.00045 18.9999M5.00045 4.99988L19.0005 18.9999\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"1.5\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    />\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                {items && items.length > 0 && (\n                    <InnerPageTemplate\n                        templates={items}\n                        handleImportTemplate={handleImportTemplate}\n                        favIds={favIds}\n                        handleFavTemplate={handleFavTemplate}\n                    />\n                )}\n\n                {items && items?.length > number && (\n                    <div className=\"load-more-btn-wrapper\">\n                        <button\n                            className=\"load-more-btn\"\n                            onClick={() => {\n                                setNumber(number + 20);\n                            }}\n                        >\n                            {__('Load More', 'zoloblocks')}\n                        </button>\n                    </div>\n                )}\n                {items?.length === 0 && !loading && (\n                    <div className=\"no-found-item\">\n                        <h2>{__(`No ${itemText} found`, 'zoloblocks')}</h2>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\nexport default PageTemplateLoader;\n","import SinglePageTemplate from './single-page-template';\n\nconst InnerPageTemplate = ({ templates, handleImportTemplate, favIds, handleFavTemplate }) => {\n    return (\n        <div className=\"zolo-demos-wrapper zolo-pages-templates\">\n            {templates &&\n                templates?.length > 0 &&\n                templates.map((template, index) => {\n                    const pages = template?.pages;\n\n                    return (\n                        <SinglePageTemplate\n                            key={index}\n                            template={template}\n                            handleImportTemplate={handleImportTemplate}\n                            favIds={favIds}\n                            handleFavTemplate={handleFavTemplate}\n                            isPro={pages && pages.length > 0 && pages.some((page) => page?.status === 'pro')}\n                        />\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default InnerPageTemplate;\n","import { Tooltip } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport ProPopup from '../pro-popup';\n\nconst PagesPreview = ({ templates, pagesPanel, setPagesPanel, handleImportTemplate, favIds, handleFavTemplate, templateName }) => {\n    const [activePage, setActivePage] = useState(0);\n    return (\n        <>\n            {pagesPanel && (\n                <div className=\"zolo-pages-preview-container\">\n                    <div className=\"header\">\n                        <button className=\"close-btn\" onClick={() => setPagesPanel(false)}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                width={24}\n                                height={24}\n                                viewBox=\"0 0 24 24\"\n                                fill=\"none\"\n                                stroke=\"currentColor\"\n                                strokeWidth={2}\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                className=\"icon icon-tabler icons-tabler-outline icon-tabler-arrow-narrow-left\"\n                            >\n                                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                <path d=\"M5 12l14 0\" />\n                                <path d=\"M5 12l4 4\" />\n                                <path d=\"M5 12l4 -4\" />\n                            </svg>\n                            {__('Back', 'zoloblocks')}\n                        </button>\n                        <h2>{templateName ? templateName : __('Pages Preview', 'zoloblocks')}</h2>\n                    </div>\n                    <div className=\"zolo-demos-wrapper\">\n                        {templates &&\n                            templates?.length > 0 &&\n                            templates.map((template, index) => {\n                                return (\n                                    <div className=\"single-demo\" key={index}>\n                                        <div className=\"demo-preview\">\n                                            {template?.demo_preview && (\n                                                <img src={template.demo_preview} alt={template?.title} loading=\"lazy\" decoding=\"async\" />\n                                            )}\n                                            {/*\n                                            <>\n                                                {template?.status === 'pro' && zoloParams?.zolo_pro_status === 'inactive' && (\n                                                    <div className=\"demo-actions-btn-wrap\">\n                                                        {template?.demo_link && (\n                                                            <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                                <a className=\"demo-btn view-btn\" href={template?.demo_link} target=\"_blank\">\n                                                                    {__('Demo', 'zoloblocks')}\n                                                                    <svg\n                                                                        aria-hidden=\"true\"\n                                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                                        width={24}\n                                                                        height={24}\n                                                                        fill=\"none\"\n                                                                        viewBox=\"0 0 24 24\"\n                                                                    >\n                                                                        <path\n                                                                            stroke=\"currentColor\"\n                                                                            strokeWidth={2}\n                                                                            d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                                        />\n                                                                        <path\n                                                                            stroke=\"currentColor\"\n                                                                            strokeWidth={2}\n                                                                            d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                                        />\n                                                                    </svg>\n                                                                </a>\n                                                            </Tooltip>\n                                                        )}\n                                                        <ProPopup />\n                                                    </div>\n                                                )}\n                                            </> */}\n\n                                            <div className=\"demo-actions-btn-wrap\">\n                                                {template?.status === 'pro' ? (\n                                                    <>\n                                                        {\n                                                            // check if the user has ZoloBlocks Pro\n                                                            zoloParams?.zolo_pro_status === 'active' ? (\n                                                                <>\n                                                                    {template?.demo_link && (\n                                                                        <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                                            <a\n                                                                                className=\"demo-btn view-btn\"\n                                                                                href={template?.demo_link}\n                                                                                target=\"_blank\"\n                                                                            >\n                                                                                {__('Demo', 'zoloblocks')}\n                                                                                <svg\n                                                                                    aria-hidden=\"true\"\n                                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                                    width={24}\n                                                                                    height={24}\n                                                                                    fill=\"none\"\n                                                                                    viewBox=\"0 0 24 24\"\n                                                                                >\n                                                                                    <path\n                                                                                        stroke=\"currentColor\"\n                                                                                        strokeWidth={2}\n                                                                                        d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                                                    />\n                                                                                    <path\n                                                                                        stroke=\"currentColor\"\n                                                                                        strokeWidth={2}\n                                                                                        d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                                                    />\n                                                                                </svg>\n                                                                            </a>\n                                                                        </Tooltip>\n                                                                    )}\n\n                                                                    <Tooltip text={__('Import Demo', 'zoloblocks')} placement=\"top\">\n                                                                        <button\n                                                                            className=\"demo-btn import-btn\"\n                                                                            onClick={() => handleImportTemplate(template?.json_file)}\n                                                                        >\n                                                                            {__('Import', 'zoloblocks')}\n                                                                            <svg\n                                                                                aria-hidden=\"true\"\n                                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                                                width={24}\n                                                                                height={24}\n                                                                                fill=\"none\"\n                                                                                viewBox=\"0 0 24 24\"\n                                                                            >\n                                                                                <path\n                                                                                    stroke=\"currentColor\"\n                                                                                    strokeLinecap=\"round\"\n                                                                                    strokeLinejoin=\"round\"\n                                                                                    strokeWidth={2}\n                                                                                    d=\"M4 15v2a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-2m-8 1V4m0 12-4-4m4 4 4-4\"\n                                                                                />\n                                                                            </svg>\n                                                                        </button>\n                                                                    </Tooltip>\n                                                                </>\n                                                            ) : (\n                                                                <>\n                                                                    {template?.demo_link && (\n                                                                        <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                                            <a\n                                                                                className=\"demo-btn view-btn\"\n                                                                                href={template?.demo_link}\n                                                                                target=\"_blank\"\n                                                                            >\n                                                                                {__('Demo', 'zoloblocks')}\n                                                                                <svg\n                                                                                    aria-hidden=\"true\"\n                                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                                    width={24}\n                                                                                    height={24}\n                                                                                    fill=\"none\"\n                                                                                    viewBox=\"0 0 24 24\"\n                                                                                >\n                                                                                    <path\n                                                                                        stroke=\"currentColor\"\n                                                                                        strokeWidth={2}\n                                                                                        d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                                                    />\n                                                                                    <path\n                                                                                        stroke=\"currentColor\"\n                                                                                        strokeWidth={2}\n                                                                                        d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                                                    />\n                                                                                </svg>\n                                                                            </a>\n                                                                        </Tooltip>\n                                                                    )}\n                                                                    <ProPopup />\n                                                                </>\n                                                            )\n                                                        }\n                                                    </>\n                                                ) : (\n                                                    <>\n                                                        {template?.demo_link && (\n                                                            <Tooltip text={__('View Demo', 'zoloblocks')} placement=\"top\">\n                                                                <a className=\"demo-btn view-btn\" href={template?.demo_link} target=\"_blank\">\n                                                                    {__('Demo', 'zoloblocks')}\n                                                                    <svg\n                                                                        aria-hidden=\"true\"\n                                                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                                                        width={24}\n                                                                        height={24}\n                                                                        fill=\"none\"\n                                                                        viewBox=\"0 0 24 24\"\n                                                                    >\n                                                                        <path\n                                                                            stroke=\"currentColor\"\n                                                                            strokeWidth={2}\n                                                                            d=\"M21 12c0 1.2-4.03 6-9 6s-9-4.8-9-6c0-1.2 4.03-6 9-6s9 4.8 9 6Z\"\n                                                                        />\n                                                                        <path\n                                                                            stroke=\"currentColor\"\n                                                                            strokeWidth={2}\n                                                                            d=\"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n                                                                        />\n                                                                    </svg>\n                                                                </a>\n                                                            </Tooltip>\n                                                        )}\n\n                                                        <Tooltip text={__('Import Demo', 'zoloblocks')} placement=\"top\">\n                                                            <button\n                                                                className=\"demo-btn import-btn\"\n                                                                onClick={() => handleImportTemplate(template?.json_file)}\n                                                            >\n                                                                {__('Import', 'zoloblocks')}\n                                                                <svg\n                                                                    aria-hidden=\"true\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                    width={24}\n                                                                    height={24}\n                                                                    fill=\"none\"\n                                                                    viewBox=\"0 0 24 24\"\n                                                                >\n                                                                    <path\n                                                                        stroke=\"currentColor\"\n                                                                        strokeLinecap=\"round\"\n                                                                        strokeLinejoin=\"round\"\n                                                                        strokeWidth={2}\n                                                                        d=\"M4 15v2a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-2m-8 1V4m0 12-4-4m4 4 4-4\"\n                                                                    />\n                                                                </svg>\n                                                            </button>\n                                                        </Tooltip>\n                                                    </>\n                                                )}\n                                            </div>\n                                            <Tooltip\n                                                text={\n                                                    Array.isArray(favIds) && favIds.includes(template.id)\n                                                        ? __('Remove from Favorite', 'zoloblocks')\n                                                        : __('Add to Favorite', 'zoloblocks')\n                                                }\n                                                placement=\"top\"\n                                            ></Tooltip>\n                                        </div>\n                                        <div className=\"demo-footer\">\n                                            <div className=\"footer-left\">\n                                                <h2 className=\"demo-title\">{template.title}</h2>\n                                                <button\n                                                    onClick={() => handleFavTemplate(template.id)}\n                                                    className={\n                                                        Array.isArray(favIds) && favIds.includes(template.id) ? 'fav-btn active' : 'fav-btn'\n                                                    }\n                                                >\n                                                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"fav\">\n                                                        <path d=\"M16.5 3C19.5376 3 22 5.5 22 9C22 16 14.5 20 12 21.5C9.5 20 2 16 2 9C2 5.5 4.5 3 7.5 3C9.35997 3 11 4 12 5C13 4 14.64 3 16.5 3Z\" />\n                                                    </svg>\n                                                    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"not-fav\">\n                                                        <path d=\"M16.5 3C19.5376 3 22 5.5 22 9C22 16 14.5 20 12 21.5C9.5 20 2 16 2 9C2 5.5 4.5 3 7.5 3C9.35997 3 11 4 12 5C13 4 14.64 3 16.5 3ZM12.9339 18.6038C13.8155 18.0485 14.61 17.4955 15.3549 16.9029C18.3337 14.533 20 11.9435 20 9C20 6.64076 18.463 5 16.5 5C15.4241 5 14.2593 5.56911 13.4142 6.41421L12 7.82843L10.5858 6.41421C9.74068 5.56911 8.5759 5 7.5 5C5.55906 5 4 6.6565 4 9C4 11.9435 5.66627 14.533 8.64514 16.9029C9.39 17.4955 10.1845 18.0485 11.0661 18.6038C11.3646 18.7919 11.6611 18.9729 12 19.1752C12.3389 18.9729 12.6354 18.7919 12.9339 18.6038Z\" />\n                                                    </svg>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default PagesPreview;\n","import { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport classNames from 'classnames';\nimport PagesPreview from './pages-preview';\n\nconst SinglePageTemplate = ({ template, handleImportTemplate, favIds, handleFavTemplate, isPro }) => {\n    const pages = template?.pages;\n    const [pagesPanel, setPagesPanel] = useState(false);\n\n    return (\n        <>\n            <div className=\"single-demo\" onClick={() => setPagesPanel(!pagesPanel)}>\n                <div className=\"demo-preview photos-group\">\n                    {pages && pages.length > 0 && (\n                        <>\n                            {pages &&\n                                pages.map((page, index) => {\n                                    return (\n                                        <div className=\"single-page-photo\" key={index}>\n                                            <img src={page?.demo_preview} alt={page?.title} loading=\"lazy\" decoding=\"async\" />\n                                        </div>\n                                    );\n                                })}\n                        </>\n                    )}\n                </div>\n                <div className=\"demo-footer\">\n                    <div className=\"footer-left\">\n                        <h2 className=\"demo-title\">{template.title}</h2>\n                    </div>\n                    <div className=\"footer-right\">\n                        <span className=\"total-pages\">\n                            {pages && pages.length > 0 ? `${pages.length} ${__('Pages', 'zoloblocks')}` : __('1 Page', 'zoloblocks')}\n                        </span>\n                    </div>\n                </div>\n\n                <span className={classNames('demo-badge', `${isPro ? 'pro' : 'free'}-badge`)}>\n                    {isPro ? __('Pro', 'zoloblocks') : __('Free', 'zoloblocks')}\n                </span>\n            </div>\n            {pagesPanel && (\n                <PagesPreview\n                    templates={pages}\n                    pagesPanel={pagesPanel}\n                    setPagesPanel={setPagesPanel}\n                    handleImportTemplate={handleImportTemplate}\n                    favIds={favIds}\n                    handleFavTemplate={handleFavTemplate}\n                    templateName={template?.title}\n                />\n            )}\n        </>\n    );\n};\n\nexport default SinglePageTemplate;\n","import './preloader.scss';\nconst PreLoader = () => {\n    return (\n        <div className=\"zolo-preloader-wrapper\">\n            <div className=\"zolo-preloader\">\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n                <div className=\"dot\"></div>\n            </div>\n            <svg width={0} height={0} className=\"svg\">\n                <defs>\n                    <filter id=\"uib-jelly-ooze\">\n                        <feGaussianBlur in=\"SourceGraphic\" stdDeviation={3} result=\"blur\" />\n                        <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\" result=\"ooze\" />\n                        <feBlend in=\"SourceGraphic\" in2=\"ooze\" />\n                    </filter>\n                </defs>\n            </svg>\n        </div>\n    );\n};\n\nexport default PreLoader;\n","import { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Modal, Tooltip } from '@wordpress/components';\n\nconst ProPopup = () => {\n    const [proModal, setProModal] = useState(false);\n    return (\n        <>\n            <Tooltip text={__('Import Demo', 'zoloblocks')} placement=\"top\">\n                <button className=\"zolo-pro-modal-btn demo-btn import-btn\" onClick={() => setProModal(true)}>\n                    {__('Import', 'zoloblocks')}\n                    <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} fill=\"none\" viewBox=\"0 0 24 24\">\n                        <path\n                            stroke=\"currentColor\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M4 15v2a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-2m-8 1V4m0 12-4-4m4 4 4-4\"\n                        />\n                    </svg>\n                </button>\n            </Tooltip>\n            {\n                // Pro Modal\n                proModal && (\n                    <Modal className=\"zolo-pro-modal\" onRequestClose={() => setProModal(false)}>\n                        <svg\n                            className=\"zolo-pro-modal-icon\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width={100}\n                            height={100}\n                            viewBox=\"0 0 100 100\"\n                            fill=\"none\"\n                        >\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M53.63 19.21C53.63 21.0947 52.3999 22.6849 50.6914 23.2239L59.77 55.87L70.8204 36.0263C70.1551 35.6019 69.71 34.8575 69.71 34.0101C69.71 32.6901 70.78 31.6201 72.1 31.6201C73.42 31.6201 74.49 32.6901 74.49 34.0101C74.49 35.3301 73.41 36.4001 72.1 36.4001C72.0147 36.4001 71.9304 36.3956 71.8474 36.3867L70.47 57.53L85.6585 45.5442C85.3762 45.1518 85.21 44.6703 85.21 44.15C85.21 42.83 86.29 41.76 87.6 41.76C88.91 41.76 89.99 42.83 89.99 44.15C89.99 45.47 88.92 46.54 87.6 46.54C87.2548 46.54 86.9267 46.4668 86.6303 46.3352L81.99 57.53L80.57 61.13L77.74 69.59L76.32 73.19L75.32 75.73L75.31 75.74C58.63 73.36 41.63 73.59 25.05 76.74L23.65 73.2L22.24 69.6L19.39 61.14L17.97 57.54L13.3307 46.3478C13.042 46.4715 12.724 46.54 12.39 46.54C11.07 46.54 10 45.47 10 44.15C10 42.83 11.07 41.76 12.39 41.76C13.71 41.76 14.78 42.83 14.78 44.15C14.78 44.6798 14.6076 45.1694 14.3159 45.5656L29.49 57.54L28.1307 36.3994L28.1123 36.3997L28.0905 36.4L28.0699 36.4001C26.7499 36.4001 25.6799 35.3301 25.6799 34.0101C25.6799 32.6901 26.7499 31.6201 28.0699 31.6201C29.3899 31.6201 30.4599 32.6901 30.4599 34.0101C30.4599 34.9203 29.9512 35.7117 29.2025 36.1153L39.52 54.66L48.2086 23.2479C46.4643 22.7333 45.21 21.1234 45.21 19.21C45.21 16.88 47.09 15 49.41 15C51.73 15 53.63 16.88 53.63 19.21ZM75.32 78.5799L76.07 76.6699H76.09H77.84L77.75 76.8799L76.33 80.4799L75.33 83.0199C58.65 80.6399 41.65 80.8699 25.07 84.0199L23.67 80.4799L22.26 76.8799L22.17 76.6699H23.92L25.06 79.5799C41.64 76.4199 58.64 76.1899 75.32 78.5799ZM23.37 41.1001V41.1601C22.62 43.1801 22.66 46.1201 25.93 49.9801C25.93 49.9801 23.47 46.4901 23.7 42.6501C23.85 42.9801 24.02 43.2701 24.23 43.4701C28.86 48.0901 27.71 54.2801 27.71 54.2801C17.1 49.9901 23.37 41.0901 23.37 41.0901V41.1001ZM76.1369 41.4599C76.1382 41.4488 76.14 41.4399 76.14 41.4399L76.13 41.4499L76.1369 41.4599ZM76.1369 41.4599C76.1351 41.475 76.1342 41.4942 76.14 41.4999C76.88 43.5199 76.85 46.4599 73.58 50.3199C73.58 50.3199 76.03 46.8299 75.8 42.9999C75.66 43.3299 75.49 43.6199 75.27 43.8199C70.64 48.4399 71.79 54.6399 71.79 54.6399C82.194 50.4234 76.3671 41.7934 76.1369 41.4599ZM38.825 36.2463C38.8225 36.26 38.82 36.275 38.82 36.28C37.51 38 36.7 40.82 38.71 45.46C38.71 45.46 37.36 41.41 38.71 37.8C38.75 38.16 38.82 38.49 38.98 38.73C42.07 44.49 39.18 50.09 39.18 50.09C30.26 42.91 38.84 36.21 38.84 36.21L38.83 36.22C38.83 36.22 38.8275 36.2325 38.825 36.2463ZM60.4099 36.28C60.3999 36.27 60.3999 36.22 60.3999 36.22L60.3899 36.21C60.3899 36.21 68.9499 42.91 60.0499 50.09C60.0499 50.09 57.1499 44.49 60.2399 38.73C60.3899 38.49 60.4599 38.16 60.5199 37.8C61.8499 41.41 60.5099 45.46 60.5099 45.46C62.5299 40.82 61.7099 38 60.4099 36.28Z\"\n                                fill=\"url(#paint0_linear_1914_4408)\"\n                            />\n                            <defs>\n                                <linearGradient\n                                    id=\"paint0_linear_1914_4408\"\n                                    x1={15}\n                                    y1=\"45.5\"\n                                    x2=\"87.5\"\n                                    y2={46}\n                                    gradientUnits=\"userSpaceOnUse\"\n                                >\n                                    <stop stopColor=\"#B47A1A\" />\n                                    <stop offset=\"0.465234\" stopColor=\"#FADD55\" />\n                                    <stop offset={1} stopColor=\"#B47A1A\" />\n                                </linearGradient>\n                            </defs>\n                        </svg>\n                        <p className=\"zolo-pro-modal-desc\">\n                            {__(\n                                'Get premium resources at ZoloBlocks and save more time with stunning patterns and templates',\n                                'zoloblocks'\n                            )}\n                        </p>\n                        <a className=\"zolo-pro-modal-btn\" href=\"https://zoloblocks.com/pricing/\" target=\"_blank\">\n                            {__('Upgrade Now', 'zoloblocks')}\n                            <svg\n                                aria-hidden=\"true\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                width=\"24\"\n                                height=\"24\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                            >\n                                <path\n                                    stroke=\"currentColor\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M18 14v4.833A1.166 1.166 0 0 1 16.833 20H5.167A1.167 1.167 0 0 1 4 18.833V7.167A1.166 1.166 0 0 1 5.167 6h4.618m4.447-2H20v5.768m-7.889 2.121 7.778-7.778\"\n                                />\n                            </svg>\n                        </a>\n                    </Modal>\n                )\n            }\n        </>\n    );\n};\n\nexport default ProPopup;\n","import { BaseControl, SelectControl, Tooltip } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nimport classNames from 'classnames';\nimport InnerTemplate from './inner-template';\n\nconst TemplatesLoader = ({\n    TABS,\n    activeTab,\n    setActiveTab,\n    searchText,\n    setSearchText,\n    pullDemos,\n    setPullDemos,\n    pullNewDemos,\n    setIsOpen,\n    number,\n    setNumber,\n    loading,\n    handleImportTemplate,\n    // specific to items\n    type,\n    setType,\n    categories,\n    activeCat,\n    setActiveCat,\n    allItems,\n    items,\n    setItems,\n    tags,\n    activeTag,\n    setActiveTag,\n    sortItemsByTag,\n    handleItemSortBy,\n    itemSortBy,\n\n    // favorites\n    favIds,\n    handleFavTemplate,\n}) => {\n    let itemText = '';\n    switch (activeTab) {\n        case 'pages':\n            itemText = 'Pages';\n            break;\n        case 'demos':\n            itemText = 'Demos';\n            break;\n        case 'templates':\n            itemText = 'Templates';\n            break;\n        case 'favorites':\n            itemText = 'Favorites Items';\n            break;\n        default:\n            itemText = 'Patterns';\n            break;\n    }\n\nconst categoryTypes = ['demos_category', 'templates_category', 'pages_category', 'patterns_category'];\n// const al\n    return (\n        <>\n            <div className=\"categories\">\n                <div className=\"demo-made-button\">\n                    <button className=\"demo-made-btn made-zoloblocks-btn\">{__('hand craft', 'zoloblocks')}</button>\n                    <button className=\"demo-made-btn made-ai-btn\" title=\"upcoming\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path\n                                d=\"M14.0712 9.69993L14.9982 7.55057C15.152 7.19386 15.6539 7.19843 15.8014 7.55789L16.6354 9.59063C17.172 10.8987 18.2031 11.9386 19.5112 12.4441C20.2436 12.7271 20.9451 12.9933 21.726 13.3027C22.097 13.4496 22.0896 13.979 21.716 14.1188L19.6811 14.8802C18.2774 15.4055 17.1629 16.513 16.619 17.9233L15.8161 20.0053C15.6715 20.3804 15.1465 20.3798 15.0025 20.0045L14.2087 17.9342C13.6895 16.58 12.6432 15.5009 11.3145 14.9493L9.33125 14.1259C8.97253 13.977 8.96964 13.4642 9.32666 13.3112L11.3146 12.4589C12.5487 11.9299 13.5353 10.9424 14.0712 9.69993Z\"\n                                fill=\"black\"\n                            />\n                            <path\n                                d=\"M6.01488 3.07497L6.36536 2.26453C6.51939 1.90834 7.02058 1.91291 7.16823 2.27186L7.45362 2.96564C7.9915 4.2732 9.02484 5.3084 10.3342 5.81066C10.5983 5.91198 10.8636 6.01393 11.14 6.12187C11.512 6.26717 11.505 6.79641 11.1309 6.93603L10.5019 7.17075C9.09773 7.69476 7.98233 8.80125 7.43724 10.2109L7.18294 10.8686C7.0381 11.2431 6.51378 11.2426 6.36966 10.8678L6.11046 10.1936C5.59 8.83976 4.54261 7.76153 3.21341 7.21116L2.56601 6.9431C2.20678 6.79436 2.20389 6.28094 2.56142 6.12807L3.25573 5.83122C4.49031 5.30336 5.47779 4.31692 6.01488 3.07497Z\"\n                                fill=\"black\"\n                            />\n                            <path\n                                d=\"M4.71182 15.9861L4.7511 15.8956C4.88762 15.5812 5.33013 15.5852 5.461 15.9021C5.93846 17.0583 6.85588 17.9676 8.01378 18.4132L8.10773 18.4495C8.42754 18.573 8.4217 19.0269 8.10037 19.1463C6.89622 19.5939 5.93558 20.5497 5.46676 21.7574C5.34152 22.08 4.88724 22.0809 4.76262 21.7581C4.30772 20.5795 3.39184 19.6358 2.2334 19.158C1.91983 19.0287 1.92376 18.5778 2.23586 18.4449C3.33693 17.976 4.23152 17.0924 4.71182 15.9861Z\"\n                                fill=\"black\"\n                            />\n                        </svg>\n                        ai\n                        <span>{__('upcoming', 'zoloblocks')}</span>\n                    </button>\n                </div>\n                <div className=\"demo-title-proFree-wrap\">\n                    <h2 className=\"category-title\">{__('Categories', 'zoloblocks')}</h2>\n                    <div className=\"demo-proFree-btn\">\n                        {type !== '' && (\n                            <Tooltip>\n                                <button\n                                    className=\"demo-pro-free-reset\"\n                                    onClick={() => {\n                                        setType('');\n                                    }}\n                                >\n                                    <svg\n                                        className=\"w-6 h-6 text-gray-800 dark:text-white\"\n                                        aria-hidden=\"true\"\n                                        width={24}\n                                        height={24}\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                    >\n                                        <path\n                                            stroke=\"currentColor\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth={2}\n                                            d=\"M17.651 7.65a7.131 7.131 0 0 0-12.68 3.15M18.001 4v4h-4m-7.652 8.35a7.13 7.13 0 0 0 12.68-3.15M6 20v-4h4\"\n                                        />\n                                    </svg>\n                                </button>\n                            </Tooltip>\n                        )}\n                        <button\n                            className=\"demo-free-btn\"\n                            onClick={() => {\n                                setType('free');\n                            }}\n                        >\n                            {__('free', 'zoloblocks')}\n                        </button>\n                        <button\n                            className=\"demo-pro-btn\"\n                            onClick={() => {\n                                setType('pro');\n                            }}\n                        >\n                            {__('pro', 'zoloblocks')}\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"category-list\">\n                    {categories &&\n                        categories?.length > 0 && activeTab !== 'favorites' &&\n                        categories?.map((category) => (\n                            <button\n                                key={category?.value}\n                                className={classNames('single-category', {\n                                    active: activeCat === category?.value,\n                                })}\n                                onClick={() => setActiveCat(category?.value)}\n                            >\n                                <span className=\"single-category-text\">{category?.label}</span>\n                                <span className=\"single-category-count\">\n                                    {allItems &&\n                                        (category?.value === 'all'\n                                            ? allItems?.length\n                                            : allItems?.filter((template) =>\n                                                  categoryTypes.some((type) => template[type]?.includes(category.label))\n                                              )?.length)}\n                                </span>\n                            </button>\n                        ))}\n                </div>\n            </div>\n            <div className=\"demos-container\">\n                <div className=\"zolo-dm-head\">\n                    <div className=\"logo-area\">\n                        <svg width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\">\n                            <path\n                                fillRule=\"evenodd\"\n                                clipRule=\"evenodd\"\n                                d=\"M15.6827 10.8669L18.9688 7.58074L18.9405 7.55241C20.7819 8.94051 22 11.0085 22 13.4448C22 15.7677 21.1785 18.204 19.5637 19.6771C17.9207 21.1785 15.9093 21.915 13.5014 21.915L6.64589 21.9433H2V14.1246L14.1813 2H20.9235L6.36261 16.3343H13.5297C14.4079 16.3343 15.1728 16.0227 15.7677 15.4278C16.3909 14.8045 16.7592 14.0113 16.7592 13.0765C16.7592 12.2833 16.1643 11.4051 15.6827 10.8669ZM2.02869 10.3003V2H10.3573L2.02869 10.3003Z\"\n                                fill=\"#2667FF\"\n                            />\n                        </svg>\n                        <div className=\"logo-text\">{__('Template Library', 'zoloblocks')}</div>\n                    </div>\n                    <div className=\"tabs-area\">\n                        {TABS &&\n                            TABS.map((tab) => (\n                                <button\n                                    key={tab.value}\n                                    className={classNames(\n                                        'single-tab',\n                                        { active: activeTab === tab.value },\n                                        { fav: tab.value === 'favorites' }\n                                    )}\n                                    onClick={() => setActiveTab(tab.value)}\n                                >\n                                    {tab.label}\n                                </button>\n                            ))}\n                    </div>\n                    <div className=\"search-close-area\">\n                        <div className=\"search\">\n                            <input\n                                type=\"search\"\n                                placeholder={__('Search', 'zoloblocks')}\n                                value={searchText}\n                                onChange={(e) => setSearchText(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"sync-btn\">\n                            <Tooltip text={__('Sync Demos', 'zoloblocks')} placement=\"top\">\n                                <button\n                                    className=\"sync-button\"\n                                    onClick={() => {\n                                        setPullDemos(!pullDemos);\n                                        pullNewDemos();\n                                        setSearchText('');\n                                    }}\n                                >\n                                    <svg\n                                        className=\"w-6 h-6 text-gray-800 dark:text-white\"\n                                        aria-hidden=\"true\"\n                                        width=\"24\"\n                                        height=\"24\"\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                    >\n                                        <path\n                                            stroke=\"currentColor\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            strokeWidth=\"2\"\n                                            d=\"M17.651 7.65a7.131 7.131 0 0 0-12.68 3.15M18.001 4v4h-4m-7.652 8.35a7.13 7.13 0 0 0 12.68-3.15M6 20v-4h4\"\n                                        />\n                                    </svg>\n                                </button>\n                            </Tooltip>\n                        </div>\n                        <div className=\"close-btn\">\n                            <button onClick={() => setIsOpen(false)}>\n                                <svg viewBox=\"0 0 24 24\" width={24} height={24} color={'#000000'} fill={'none'}>\n                                    <path\n                                        d=\"M19.0005 4.99988L5.00045 18.9999M5.00045 4.99988L19.0005 18.9999\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"1.5\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    />\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                {items && items.length > 0 && (\n                    <div className=\"zolo-secondary-head\">\n                        <div className=\"secondary-header-item\">\n                            <div className=\"secondary-item\">\n                                <SelectControl\n                                    label={__('Sort By :', 'zoloblocks')}\n                                    options={[\n                                        { label: __('Newest', 'zoloblocks'), value: 'newest' },\n                                        { label: __('Oldest', 'zoloblocks'), value: 'oldest' },\n                                    ]}\n                                    onChange={(v) => {\n                                        handleItemSortBy(v);\n                                    }}\n                                    value={itemSortBy}\n                                />\n                            </div>\n\n                            <div className=\"secondary-item zolo-tp-tags-item\">\n                                <BaseControl label={__('Popular Tags :', 'zoloblocks')} className=\"zolo-tags\">\n                                    <div className=\"tags-wrap\">\n                                        <div className=\"tags-btn-wrap\">\n                                            {tags &&\n                                                tags.length > 0 &&\n                                                tags.map((tag) => (\n                                                    <button\n                                                        key={tag}\n                                                        className={classNames('single-tag', `${activeTag === tag ? 'active' : ''}`)}\n                                                        onClick={() => sortItemsByTag(tag)}\n                                                    >\n                                                        {\n                                                            //make the first letter uppercase of each word in the tag\n                                                            tag\n                                                                .split(' ')\n                                                                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                                                                .join(' ')\n                                                        }\n                                                    </button>\n                                                ))}\n                                        </div>\n                                        <button\n                                            className={classNames('clear-tag', `${activeTag !== '' ? 'active' : ''}`)}\n                                            onClick={() => {\n                                                setActiveTag('');\n                                                setItems(allItems);\n                                            }}\n                                        >\n                                            <svg\n                                                width=\"64px\"\n                                                height=\"64px\"\n                                                viewBox=\"0 0 21 21\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                fill=\"#2483ff\"\n                                                stroke=\"#2483ff\"\n                                            >\n                                                <g id=\"SVGRepo_bgCarrier\" strokeWidth={0} />\n                                                <g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                                <g id=\"SVGRepo_iconCarrier\">\n                                                    <g\n                                                        fill=\"none\"\n                                                        fillRule=\"evenodd\"\n                                                        stroke=\"#000000\"\n                                                        strokeLinecap=\"round\"\n                                                        strokeLinejoin=\"round\"\n                                                        transform=\"matrix(0 1 1 0 2.5 2.5)\"\n                                                    >\n                                                        <path d=\"m3.98652376 1.07807068c-2.38377179 1.38514556-3.98652376 3.96636605-3.98652376 6.92192932 0 4.418278 3.581722 8 8 8s8-3.581722 8-8-3.581722-8-8-8\" />\n                                                        <path d=\"m4 1v4h-4\" transform=\"matrix(1 0 0 -1 0 6)\" />\n                                                    </g>\n                                                </g>\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </BaseControl>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {items && items.length > 0 && (\n                    <InnerTemplate\n                        templates={items.length > number ? items.slice(0, number) : items}\n                        handleImportTemplate={handleImportTemplate}\n                        favIds={favIds}\n                        handleFavTemplate={handleFavTemplate}\n                    />\n                )}\n\n                {items && items?.length > number && (\n                    <div className=\"load-more-btn-wrapper\">\n                        <button\n                            className=\"load-more-btn\"\n                            onClick={() => {\n                                setNumber(number + 20);\n                            }}\n                        >\n                            {__('Load More', 'zoloblocks')}\n                        </button>\n                    </div>\n                )}\n                {items?.length === 0 && !loading && (\n                    <div className=\"no-found-item\">\n                        <h2>{__(`No ${itemText} found`, 'zoloblocks')}</h2>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\nexport default TemplatesLoader;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"richText\"];","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import apiFetch from '@wordpress/api-fetch';\nimport { Button, Modal } from '@wordpress/components';\nimport { subscribe, useSelect } from '@wordpress/data';\nimport { getTextContent } from '@wordpress/rich-text'; \nimport { useEffect, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { createRoot } from 'react-dom/client'; // ?? todo: remove if @wordpress/element is updated\n\n/**\n * Template Library Style\n */\nimport './library.scss';\nimport './page-templates.scss';\n\n/**\n * Internal dependencies\n */\nimport PageTemplateLoader from './page-templates';\nimport PreLoader from './preloader';\nimport TemplatesLoader from './template-loader';\n\n/**\n * Constants\n */\nconst TABS = [\n    {\n        label: __('Patterns', 'zoloblocks'),\n        value: 'patterns',\n    },\n    {\n        label: __('Templates', 'zoloblocks'),\n        value: 'templates',\n    },\n    {\n        label: __('Pages', 'zoloblocks'),\n        value: 'pages',\n    },\n    {\n        label: __('Demos', 'zoloblocks'),\n        value: 'demos',\n    },\n    {\n        label: __('Favorites', 'zoloblocks'),\n        value: 'favorites',\n    },\n];\n\n/**\n * ZoloBlocks Template Library Button\n */\nfunction ZoloBlocksTemplateLibraryButton() {\n    const [isOpen, setIsOpen] = useState(false);\n    const [allTemplates, setAllTemplates] = useState([]);\n    const [pullDemos, setPullDemos] = useState(false);\n    const [activeTab, setActiveTab] = useState('patterns');\n    const [searchText, setSearchText] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [number, setNumber] = useState(20);\n    const [total, setTotal] = useState(0);\n    const [currentPostType, setCurrentPostType] = useState(wp.data.select('core/editor').getCurrentPostType());\n\n    /**\n     * =====\n     * Page Templates: Templates (Pro, Free)\n     * =====\n     */\n    const [allPageTemplates, setAllPageTemplates] = useState([]);\n    const [pageTemplates, setPageTemplates] = useState([]);\n    const [pageTemplatesType, setPageTemplatesType] = useState('');\n    const [pageTemplateCategories, setPageTemplateCategories] = useState([]);\n    const [activePageTemplateCat, setActivePageTemplateCat] = useState('all');\n\n    const { isPageEmpty } = useSelect((select) => {\n        const { getBlocks } = select('core/block-editor');\n        const blocks = getBlocks();\n        let isPageEmpty = false;\n\n        if (blocks.length === 0) {\n            isPageEmpty = true;\n        }\n\n        if (blocks.length == 1) {\n            const firstBlock = blocks[0];\n            if (firstBlock.name === 'core/paragraph' && getTextContent(firstBlock.attributes.content).length === 0) {\n                isPageEmpty = true;\n            }\n        }\n\n        return { isPageEmpty };\n    }, []);\n\n    useEffect(() => {\n        apiFetch({\n            path: '/zolo/v1/page-templates',\n            method: 'GET',\n        }).then((response) => {\n            if (!response) {\n                return;\n            }\n            const { data } = response;\n\n            if (!data) {\n                return;\n            }\n\n            // convert object to array\n            const allAvailablePagesTemplates = Object.entries(data).map(([key, value]) => {\n                return {\n                    title: key,\n                    pages: value,\n                };\n            });\n\n            setAllPageTemplates(allAvailablePagesTemplates);\n\n            // set page template categories\n            const pageTemplateCategories = allAvailablePagesTemplates.map((template) => template.title);\n            const sortedPageTemplateCategories = pageTemplateCategories.sort((a, b) => a.localeCompare(b));\n            const pageTemplateCategoriesArray = sortedPageTemplateCategories.map((category) => ({ label: category, value: category }));\n            pageTemplateCategoriesArray.unshift({ label: __('All', 'zoloblocks'), value: 'all' });\n            setPageTemplateCategories(pageTemplateCategoriesArray);\n\n            // set page templates\n            setPageTemplates(allAvailablePagesTemplates);\n        });\n    }, []);\n\n    // filter page templates based on category\n    useEffect(() => {\n        const filteredPageTemplates = allPageTemplates?.filter((template) => {\n            if (activePageTemplateCat === 'all') {\n                return true;\n            } else {\n                return template.title === activePageTemplateCat;\n            }\n        });\n        setPageTemplates(filteredPageTemplates);\n    }, [activePageTemplateCat]); // eslint-disable\n\n    // filter page templates based on page template type\n    useEffect(() => {\n        const filteredPageTemplates = allPageTemplates?.filter((template) => {\n            const pages = template?.pages;\n\n            if (pageTemplatesType === 'free') {\n                return pages && pages.length > 0 && pages.some((page) => page?.status === 'free');\n            } else if (pageTemplatesType === 'pro') {\n                return pages && pages.length > 0 && pages.some((page) => page?.status === 'pro');\n            } else {\n                return true;\n            }\n        });\n        setPageTemplates(filteredPageTemplates);\n    }, [pageTemplatesType]); // eslint-disable\n\n    /**\n     * =====\n     * Patterns Type: Patterns (Pro, Free)\n     *\n     * 1. Fetch all patterns\n     * 2. Filter by Patterns Type\n     * 3. Filter by Category\n     */\n    const [allPatterns, setAllPatterns] = useState([]);\n    const [patterns, setPatterns] = useState([]);\n    const [patternsType, setPatternsType] = useState('');\n    const [patternCategories, setPatternCategories] = useState([]);\n    const [activePatternCat, setActivePatternCat] = useState('all');\n    const [patternTags, setPatternTags] = useState([]);\n    const [activePatternTag, setActivePatternTag] = useState('');\n    const [patternSortBy, setPatternSortBy] = useState('newest');\n\n    // Filter by Patterns Type\n    useEffect(() => {\n        const filteredPatterns = allPatterns?.filter((template) => {\n            if (patternsType === 'free') {\n                return template?.status === 'free';\n            } else if (patternsType === 'pro') {\n                return template?.status === 'pro';\n            } else {\n                return true;\n            }\n        });\n        setPatterns(filteredPatterns);\n    }, [patternsType]); // eslint-disable-line\n\n    // Filter by Pattern Category\n    useEffect(() => {\n        // filter patterns based on category\n        const filteredPatterns = allPatterns?.filter((template) => {\n            if (activePatternCat === 'all') {\n                return true;\n            } else {\n                return template.patterns_category.includes(activePatternCat);\n            }\n        });\n        setPatterns(filteredPatterns);\n    }, [activePatternCat]); // eslint-disable-line\n\n    // Filter by Pattern Tags\n    const sortPatternsByTag = (tag) => {\n        setActivePatternTag(tag);\n        const filteredPatterns = allPatterns?.filter((template) => template.tags.includes(tag));\n        setPatterns(filteredPatterns);\n    };\n\n    // Sorting Patterns\n    const handlePatternSortBy = (value) => {\n        setPatternSortBy(value);\n        const sortedPatterns = allPatterns?.sort((a, b) => {\n            if (value === 'newest') {\n                return new Date(b.created) - new Date(a.created);\n            } else if (value === 'oldest') {\n                return new Date(a.created) - new Date(b.created);\n            }\n        });\n        setPatterns([...sortedPatterns]); // update the state\n    };\n\n    /**\n     * =====\n     * Templates Type: Pages (Pro, Free)\n     *\n     * 1. Fetch all pages\n     * 2. Filter by Pages Type\n     * 3. Filter by Category\n     * =====\n     */\n    const [allPages, setAllPages] = useState([]);\n    const [pages, setPages] = useState([]);\n    const [pagesType, setPagesType] = useState('');\n    const [pageCategories, setPageCategories] = useState([]);\n    const [activePageCat, setActivePageCat] = useState('all');\n    const [pageTags, setPageTags] = useState([]);\n    const [activePageTag, setActivePageTag] = useState('');\n    const [pageSortBy, setPageSortBy] = useState('newest');\n\n    // Filter by Pages Type\n    useEffect(() => {\n        const filteredPages = allPages?.filter((template) => {\n            if (pagesType === 'free') {\n                return template?.status === 'free';\n            } else if (pagesType === 'pro') {\n                return template?.status === 'pro';\n            } else {\n                return true;\n            }\n        });\n        setPages(filteredPages.slice(0, number));\n        setTotal(filteredPages.length);\n    }, [pagesType]); // eslint-disable-line\n\n    // Filter by Category\n    useEffect(() => {\n        // filter patterns based on category\n        const filteredPages = allPages?.filter((template) => {\n            if (activePageCat === 'all') {\n                return true;\n            } else {\n                return template.pages_category.includes(activePageCat);\n            }\n        });\n        setPages(filteredPages.slice(0, number));\n        setTotal(filteredPages.length);\n    }, [activePageCat]); // eslint-disable-line\n\n    // Filter by Tags\n    const sortPagesByTag = (tag) => {\n        setActivePageTag(tag);\n        const filteredPages = allPages?.filter((template) => template.tags.includes(tag));\n        setPages(filteredPages);\n    };\n\n    // Sorting Pages\n    const handlePageSortBy = (value) => {\n        setPageSortBy(value);\n        const sortedPages = allPages?.sort((a, b) => {\n            if (value === 'newest') {\n                return new Date(b.created) - new Date(a.created);\n            } else if (value === 'oldest') {\n                return new Date(a.created) - new Date(b.created);\n            }\n        });\n        setPages([...sortedPages]); // update the state\n    };\n\n    /**\n     * =====\n     * Templates Type: Demos (Pro, Free)\n     *\n     * 1. Fetch all demos\n     * 2. Filter by Demos Type\n     * 3. Filter by Category\n     * =====\n     */\n    const [allDemos, setAllDemos] = useState([]);\n    const [demos, setDemos] = useState([]);\n    const [demosType, setDemosType] = useState('');\n    const [demoCategories, setDemoCategories] = useState([]);\n    const [activeDemoCat, setActiveDemoCat] = useState('all');\n    const [demoTags, setDemoTags] = useState([]);\n    const [activeDemoTag, setActiveDemoTag] = useState('');\n    const [demoSortBy, setDemoSortBy] = useState('newest');\n\n    // Filter by Demos Type\n    useEffect(() => {\n        const filteredDemos = allDemos?.filter((template) => {\n            if (demosType === 'free') {\n                return template?.status === 'free';\n            } else if (demosType === 'pro') {\n                return template?.status === 'pro';\n            } else {\n                return true;\n            }\n        });\n        setDemos(filteredDemos.slice(0, number));\n        setTotal(filteredDemos.length);\n    }, [demosType]); // eslint-disable-line\n\n    // Filter by Category\n    useEffect(() => {\n        // filter patterns based on category\n        const filteredDemos = allDemos?.filter((template) => {\n            if (activeDemoCat === 'all') {\n                return true;\n            } else {\n                return template.demos_category.includes(activeDemoCat);\n            }\n        });\n        setDemos(filteredDemos.slice(0, number));\n        setTotal(filteredDemos.length);\n    }, [activeDemoCat]); // eslint-disable-line\n\n    useEffect(() => {\n        const toolbar = document.querySelector('.editor-header__toolbar, .edit-post-header__toolbar');\n        const libraryButton = document.querySelector('.zoloblocks-template-library-button');\n        if (toolbar && !libraryButton && currentPostType !== 'zolo-popup') {\n            renderButton(toolbar);\n        }\n\n        if (libraryButton) {\n            setTimeout(() => {\n                if (isPageEmpty) {\n                    libraryButton.classList.add('empty-page');\n                } else {\n                    libraryButton.classList.remove('empty-page');\n                }\n            }, 1000);\n        }\n    }, [currentPostType, isPageEmpty]);\n\n    // Filter by Tags\n    const sortDemosByTag = (tag) => {\n        setActiveDemoTag(tag);\n        const filteredDemos = allDemos?.filter((template) => template.tags.includes(tag));\n        setDemos(filteredDemos);\n    };\n\n    // Sorting Demos\n    const handleDemoSortBy = (value) => {\n        setDemoSortBy(value);\n        const sortedDemos = allDemos?.sort((a, b) => {\n            if (value === 'newest') {\n                return new Date(b.created) - new Date(a.created);\n            } else if (value === 'oldest') {\n                return new Date(a.created) - new Date(b.created);\n            }\n        });\n        setDemos([...sortedDemos]); // update the state\n    };\n\n    // Favorite Templates\n    const [favIds, setFavIds] = useState([]);\n    const [allFavItems, setAllFavItems] = useState([]);\n    const [favItems, setFavItems] = useState([]);\n    const [favType, setFavType] = useState('');\n    const [favCategories, setFavCategories] = useState([]);\n    const [activeFavCat, setActiveFavCat] = useState('all');\n    const [favTags, setFavTags] = useState([]);\n    const [activeFavTag, setActiveFavTag] = useState('');\n    const [favSortBy, setFavSortBy] = useState('newest');\n    const [favStatus, setFavStatus] = useState(false);\n\n    // fetch settings\n    const fetchSettings = async (options) => {\n        try {\n            const response = await apiFetch(options);\n            return response;\n        } catch (error) {\n            console.error('API Fetch Error:', error);\n            throw error;\n        }\n    };\n\n    // favorite templates\n    useEffect(() => {\n        apiFetch({\n            path: '/zolo/v1/favorites',\n            method: 'GET',\n        }).then((response) => {\n            if (!response) {\n                return;\n            }\n            const favIds = Object.values(response); // get the values\n            setFavIds(favIds);\n        });\n    }, []);\n\n    // save favorite templates to database\n    const handleFavTemplate = (templateID) => {\n        // setLoading(true);\n        apiFetch({\n            path: '/zolo/v1/favorites',\n            method: 'POST',\n            data: { fav_id: templateID, zolo_nonce: zoloParams?.zolo_nonce },\n        }).then((response) => {\n            if (!response) {\n                return;\n            }\n            const favIds = Object.values(response); // get the values\n            setFavIds(favIds);\n            setFavStatus(!favStatus);\n        });\n    };\n\n    // Filter by Demos Type\n    useEffect(() => {\n        const filteredFav = allFavItems?.filter((template) => {\n            if (favType === 'free') {\n                return template?.status === 'free';\n            } else if (favType === 'pro') {\n                return template?.status === 'pro';\n            } else {\n                return true;\n            }\n        });\n        setFavItems(filteredFav?.slice(0, number));\n        setTotal(filteredFav?.length);\n    }, [favType]); // eslint-disable-line\n\n    // Filter by Category\n    useEffect(() => {\n        // filter patterns based on category\n        const filteredFavs = allFavItems?.filter((template) => {\n            if (activeFavCat === 'all') {\n                return true;\n            } else {\n                return template.categories.includes(activeFavCat);\n            }\n        });\n        setFavItems(filteredFavs?.slice(0, number));\n        setTotal(filteredFavs?.length);\n    }, [activeFavCat]); // eslint-disable-line\n\n    // Filter by Tags\n    const sortFavByTag = (tag) => {\n        setActiveFavTag(tag);\n        const filteredFavs = allFavItems?.filter((template) => template.tags.includes(tag));\n        setFavItems(filteredFavs);\n    };\n\n    // Sorting Demos\n    const handleFavSortBy = (value) => {\n        setFavSortBy(value);\n        const sortedFavs = allFavItems?.sort((a, b) => {\n            if (value === 'newest') {\n                return new Date(b.created) - new Date(a.created);\n            } else if (value === 'oldest') {\n                return new Date(a.created) - new Date(b.created);\n            }\n        });\n        setFavItems([...sortedFavs]); // update the state\n    };\n\n    useEffect(() => {\n        if (favIds?.length > 0) {\n            const allFavItemsData = allTemplates?.filter((template) => favIds?.includes(template.id));\n\n            setAllFavItems(allFavItemsData);\n            setFavItems(allFavItemsData);\n\n            // set favorite categories\n            const favCategories = allFavItemsData?.map((template) => template.categories);\n            const uniqueFavCategories = [...new Set(favCategories?.flat())];\n            const sortedFavCategories = uniqueFavCategories.sort((a, b) => a.localeCompare(b));\n            const favCategoriesArray = sortedFavCategories.map((category) => ({ label: category, value: category }));\n            const index = favCategoriesArray.findIndex((category) => category.value === 'Demos');\n            if (index > -1) {\n                favCategoriesArray.splice(index, 1);\n            }\n            favCategoriesArray.unshift({ label: __('All', 'zoloblocks'), value: 'all' });\n            setFavCategories(favCategoriesArray);\n\n            // favorite tags\n            const allFavTags = allFavItemsData?.map((template) => template.tags);\n            // find top 5 tags based on frequency\n            const favTags = allFavTags?.flat().reduce((acc, tag) => {\n                acc[tag] = (acc[tag] || 0) + 1;\n                return acc;\n            }, {});\n\n            const sortedFavTags = Object.keys(favTags)\n                .sort((a, b) => favTags[b] - favTags[a])\n                .slice(0, 10);\n            setFavTags(sortedFavTags);\n        } else {\n            setAllFavItems([]);\n            setFavItems([]);\n            setFavCategories([]);\n            setFavTags([]);\n        }\n    }, [favIds, allTemplates, favStatus]);\n\n    // fetch templates\n    const fetchTemplates = async () => {\n        setLoading(true);\n        apiFetch({\n            path: '/zolo/v1/templates',\n            method: 'GET',\n        }).then((response) => {\n            const { data } = response;\n            console.log({response});\n            \n            if (!data) {\n                console.log('No data found');\n                setLoading(false);\n                return;\n            }\n\n            setAllTemplates(data);\n\n            // set all pages\n            const pages = data?.filter((template) => template.template_type === 'pages');\n            setAllPages(pages);\n            setPages(pages);\n\n            // set page categories\n            const pageCategories = pages\n                ?.filter((template) => template.template_type === 'pages')\n                .map((template) => template.pages_category);\n            const uniquePageCategories = [...new Set(pageCategories?.flat())];\n            const sortedPageCategories = uniquePageCategories.sort((a, b) => a.localeCompare(b));\n            const pageCategoriesArray = sortedPageCategories.map((category) => ({ label: category, value: category }));\n            pageCategoriesArray.unshift({ label: __('All', 'zoloblocks'), value: 'all' });\n            setPageCategories(pageCategoriesArray);\n\n            // page tags\n            const allPageTags = pages?.map((template) => template.tags);\n            // find top 5 tags based on frequency\n            const pageTags = allPageTags?.flat().reduce((acc, tag) => {\n                acc[tag] = (acc[tag] || 0) + 1;\n                return acc;\n            }, {});\n\n            const sortedPageTags = Object.keys(pageTags)\n                .sort((a, b) => pageTags[b] - pageTags[a])\n                .slice(0, 10);\n            setPageTags(sortedPageTags);\n\n            // stop loading\n            setLoading(false);\n        });\n    };\n\n    // fetch demo templates\n    const fetchDemoTemplates = async () => {\n        setLoading(true);\n        apiFetch({\n            path: '/zolo/v1/demos',\n            method: 'GET',\n        }).then((response) => {\n            const { data } = response;\n            if (!data) {\n                console.log('No data found');\n                setLoading(false);\n                return;\n            }\n\n            // add demos to all templates\n            setAllTemplates((prev) => [...prev, ...data]);\n\n            // set all patterns\n            const patterns = data?.filter((template) => template.template_type === 'patterns');\n            setAllPatterns(patterns);\n            setPatterns(patterns);\n\n            // set pattern categories\n            const patternCategories = patterns\n                ?.filter((template) => template.template_type === 'patterns')\n                .map((template) => template.patterns_category);\n            const uniquePatternCategories = [...new Set(patternCategories?.flat())];\n            const sortedPatternCategories = uniquePatternCategories.sort((a, b) => a.localeCompare(b));\n            const patternCategoriesArray = sortedPatternCategories.map((category) => ({ label: category, value: category }));\n            patternCategoriesArray.unshift({ label: __('All', 'zoloblocks'), value: 'all' });\n            setPatternCategories(patternCategoriesArray);\n\n            // patterns tags\n            const allPatternTags = patterns?.map((template) => template.tags);\n            // find top 5 tags based on frequency\n            const patternTags = allPatternTags?.flat().reduce((acc, tag) => {\n                acc[tag] = (acc[tag] || 0) + 1;\n                return acc;\n            }, {});\n\n            const sortedPatternTags = Object.keys(patternTags)\n                .sort((a, b) => patternTags[b] - patternTags[a])\n                .slice(0, 10);\n            setPatternTags(sortedPatternTags);\n\n            // set all demos\n            const demos = data?.filter((template) => template.template_type === 'demos');\n            setAllDemos(demos);\n            setDemos(demos);\n\n            // set demo categories\n            const demoCategories = demos\n                ?.filter((template) => template.template_type === 'demos')\n                .map((template) => template.demos_category);\n            const uniqueDemoCategories = [...new Set(demoCategories?.flat())];\n            const sortedDemoCategories = uniqueDemoCategories.sort((a, b) => a.localeCompare(b));\n            const demoCategoriesArray = sortedDemoCategories.map((category) => ({ label: category, value: category }));\n            demoCategoriesArray.unshift({ label: __('All', 'zoloblocks'), value: 'all' });\n            setDemoCategories(demoCategoriesArray);\n\n            // demo tags\n            const allDemoTags = demos?.map((template) => template.tags);\n            // find top 5 tags based on frequency\n            const demoTags = allDemoTags?.flat().reduce((acc, tag) => {\n                acc[tag] = (acc[tag] || 0) + 1;\n                return acc;\n            }, {});\n\n            const sortedDemoTags = Object.keys(demoTags)\n                .sort((a, b) => demoTags[b] - demoTags[a])\n                .slice(0, 10);\n            setDemoTags(sortedDemoTags);\n            // stop loading\n            setLoading(false);\n        });\n    };\n\n    // pull new demos\n    const pullNewDemos = () => {\n        setLoading(true);\n        jQuery.ajax({\n            url: zoloParams?.ajaxurl,\n            type: 'POST',\n            nonce: zoloParams?.nonce,\n            data: {\n                action: 'zolo_demo_pull',\n            },\n            success: function (response) {\n                if (response.success) {\n                    fetchTemplates();\n                    setLoading(false);\n                } else {\n                    console.log('Error:', response.data);\n                }\n            },\n            error: function (error) {\n                console.log('Error:', error);\n            },\n        });\n\n        jQuery.ajax({\n            url: zoloParams?.ajaxurl,\n            type: 'POST',\n            nonce: zoloParams?.nonce,\n            data: {\n                action: 'zolo_demo_template_pull',\n            },\n            success: function (response) {\n                if (response.success) {\n                    fetchDemoTemplates();\n                    setLoading(false);\n                } else {\n                    console.log('Error:', response.data);\n                }\n            },\n            error: function (error) {\n                console.log('Error:', error);\n            },\n        });\n    };\n\n    /**\n     * Fetch Templates\n     */\n    useEffect(() => {\n        // fetch templates\n        fetchTemplates();\n\n        // fetch demo templates\n        fetchDemoTemplates();\n    }, [pullDemos]);\n\n    // filter templates based on search text\n    useEffect(() => {\n        if (searchText !== '' && activeTab === 'patterns') {\n            const filteredPatterns = allPatterns?.filter((template) => {\n                return template.title.toLowerCase().includes(searchText.toLowerCase());\n            });\n            setPatterns(filteredPatterns);\n        } else {\n            setPatterns(allPatterns); // Reset to all patterns if no search text\n        }\n\n        if (searchText !== '' && activeTab === 'pages') {\n            const filteredPages = allPages?.filter((template) => {\n                return template.title.toLowerCase().includes(searchText.toLowerCase());\n            });\n            setPages(filteredPages);\n        } else {\n            setPages(allPages); // Reset to all pages if no search text\n        }\n\n        if (searchText !== '' && activeTab === 'demos') {\n            const filteredDemos = allDemos?.filter((template) => {\n                return template.title.toLowerCase().includes(searchText.toLowerCase());\n            });\n            setDemos(filteredDemos);\n        } else {\n            setDemos(allDemos); // Reset to all demos if no search text\n        }\n\n        if (searchText !== '' && activeTab === 'favorites') {\n            const filteredFavs = allFavItems?.filter((template) => {\n                return template.title.toLowerCase().includes(searchText.toLowerCase());\n            });\n            setFavItems(filteredFavs);\n        } else {\n            setFavItems(allFavItems); // Reset to all favorites if no search text\n        }\n\n        if (searchText !== '' && activeTab === 'templates') {\n            const filteredPageTemplates = allPageTemplates?.filter((template) => {\n                return template.title.toLowerCase().includes(searchText.toLowerCase());\n            });\n            setPageTemplates(filteredPageTemplates);\n        } else {\n            setPageTemplates(allPageTemplates); // Reset to all page templates if no search text\n        }\n    }, [searchText, activeTab, allPatterns, number, allDemos]); // eslint-disable-line\n\n    /**\n     * Handle Import Template\n     * @param {string} jsonFile\n     */\n    const handleImportTemplate = (jsonFile) => {\n        setLoading(true);\n\n        jQuery.ajax({\n            url: zoloParams?.ajaxurl,\n            type: 'POST',\n            nonce: zoloParams?.nonce,\n            data: {\n                action: 'zolo_demo_import',\n                security: zoloParams?.zolo_nonce,\n                json_file_url: jsonFile,\n            },\n            success: function (response) {\n                if (response.success) {\n                    const { data } = response;\n                    if (data) {\n                        const { content } = data;\n                        const blocks = wp.blocks.parse(content);\n                        const selectedBlock = wp.data.select('core/block-editor').getSelectedBlock();\n                        if (selectedBlock && selectedBlock.name === 'core/paragraph') {\n                            wp.data.dispatch('core/block-editor').replaceBlocks(selectedBlock.clientId, blocks);\n                        } else {\n                            wp.data.dispatch('core/block-editor').insertBlocks(blocks, 0);\n                        }\n                        setLoading(false);\n                        setIsOpen(false);\n                    }\n                } else {\n                    console.log('Error:', response.data);\n                }\n            },\n            error: function (error) {\n                console.log('Error:', error);\n            },\n        });\n    };\n\n    const LibraryButton = () => (\n        <Button onClick={() => setIsOpen(true)} className=\"zolo-library-open-button\">\n            <svg width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\">\n                <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M4 4H9.22856L4.02857 9.27618L4 4ZM15.9048 11.1047L18 8.99999V9.00951C19.2953 10.1524 20 11.6476 20 13.2857C20 15.2476 19.2667 17.1333 18.0953 18.2095C16.7715 19.4 15.2 19.9809 13.2858 19.9809L4.02865 20V14.0857L14.1048 4H18.6953L6.22864 16.3333H13.2858C14.2191 16.3333 15.0286 16 15.6191 15.3809C16.2762 14.6952 16.6191 13.8666 16.6191 12.9619C16.6191 12.2476 16.2381 11.5619 15.9048 11.1047Z\"\n                    fill=\"white\"\n                />\n            </svg>\n\n            <span className=\"zolo-template-label\">{__('Template Library', 'zoloblocks')}</span>\n        </Button>\n    );\n\n    const renderButton = (selector) => {\n        const libraryButton = document.createElement('div');\n        libraryButton.classList.add('zoloblocks-template-library-button');\n        selector.append(libraryButton);\n        createRoot(libraryButton).render(<LibraryButton />);\n    };\n\n    return (\n        <div className=\"zolo-demos-modal-wrapper\">\n            {isOpen && (\n                <Modal\n                    className=\"zolo-demos-modal\"\n                    onRequestClose={() => setIsOpen(false)}\n                    shouldCloseOnClickOutside={true}\n                    shouldCloseOnEsc={true}\n                    isOpen={isOpen}\n                    isDismissible={false}\n                >\n                    <div className=\"zolo-dm-body\">\n                        {\n                            // Patterns\n                            activeTab === 'patterns' && (\n                                <TemplatesLoader\n                                    TABS={TABS}\n                                    activeTab={activeTab}\n                                    setActiveTab={setActiveTab}\n                                    searchText={searchText}\n                                    setSearchText={setSearchText}\n                                    pullDemos={pullDemos}\n                                    setPullDemos={setPullDemos}\n                                    pullNewDemos={pullNewDemos}\n                                    setIsOpen={setIsOpen}\n                                    number={number}\n                                    setNumber={setNumber}\n                                    loading={loading}\n                                    handleImportTemplate={handleImportTemplate}\n                                    type={patternsType}\n                                    setType={setPatternsType}\n                                    categories={patternCategories}\n                                    activeCat={activePatternCat}\n                                    setActiveCat={setActivePatternCat}\n                                    allItems={allPatterns}\n                                    items={patterns}\n                                    setItems={setPatterns}\n                                    tags={patternTags}\n                                    activeTag={activePatternTag}\n                                    setActiveTag={setActivePatternTag}\n                                    sortItemsByTag={sortPatternsByTag}\n                                    handleItemSortBy={handlePatternSortBy}\n                                    itemSortBy={patternSortBy}\n                                    // fav templates\n                                    favIds={favIds}\n                                    handleFavTemplate={handleFavTemplate}\n                                />\n                            )\n                        }\n                        {\n                            // Demos\n                            activeTab === 'demos' && (\n                                <TemplatesLoader\n                                    TABS={TABS}\n                                    activeTab={activeTab}\n                                    setActiveTab={setActiveTab}\n                                    searchText={searchText}\n                                    setSearchText={setSearchText}\n                                    pullDemos={pullDemos}\n                                    setPullDemos={setPullDemos}\n                                    pullNewDemos={pullNewDemos}\n                                    setIsOpen={setIsOpen}\n                                    number={number}\n                                    setNumber={setNumber}\n                                    loading={loading}\n                                    handleImportTemplate={handleImportTemplate}\n                                    type={demosType}\n                                    setType={setDemosType}\n                                    categories={demoCategories}\n                                    activeCat={activeDemoCat}\n                                    setActiveCat={setActiveDemoCat}\n                                    allItems={allDemos}\n                                    items={demos}\n                                    setItems={setDemos}\n                                    tags={demoTags}\n                                    activeTag={activeDemoTag}\n                                    setActiveTag={setActiveDemoTag}\n                                    sortItemsByTag={sortDemosByTag}\n                                    handleItemSortBy={handleDemoSortBy}\n                                    itemSortBy={demoSortBy}\n                                    // fav templates\n                                    favIds={favIds}\n                                    handleFavTemplate={handleFavTemplate}\n                                />\n                            )\n                        }\n                        {activeTab === 'templates' && (\n                            <PageTemplateLoader\n                                TABS={TABS}\n                                activeTab={activeTab}\n                                setActiveTab={setActiveTab}\n                                searchText={searchText}\n                                setSearchText={setSearchText}\n                                pullDemos={pullDemos}\n                                setPullDemos={setPullDemos}\n                                pullNewDemos={pullNewDemos}\n                                setIsOpen={setIsOpen}\n                                number={number}\n                                setNumber={setNumber}\n                                loading={loading}\n                                handleImportTemplate={handleImportTemplate}\n                                type={pageTemplatesType}\n                                setType={setPageTemplatesType}\n                                categories={pageTemplateCategories}\n                                activeCat={activePageTemplateCat}\n                                setActiveCat={setActivePageTemplateCat}\n                                allItems={allPageTemplates}\n                                items={pageTemplates}\n                                setItems={setPageTemplates}\n                                // fav templates\n                                favIds={favIds}\n                                handleFavTemplate={handleFavTemplate}\n                            />\n                        )}\n                        {activeTab === 'pages' && (\n                            <TemplatesLoader\n                                TABS={TABS}\n                                activeTab={activeTab}\n                                setActiveTab={setActiveTab}\n                                searchText={searchText}\n                                setSearchText={setSearchText}\n                                pullDemos={pullDemos}\n                                setPullDemos={setPullDemos}\n                                pullNewDemos={pullNewDemos}\n                                setIsOpen={setIsOpen}\n                                number={number}\n                                setNumber={setNumber}\n                                loading={loading}\n                                handleImportTemplate={handleImportTemplate}\n                                type={pagesType}\n                                setType={setPagesType}\n                                categories={pageCategories}\n                                activeCat={activePageCat}\n                                setActiveCat={setActivePageCat}\n                                allItems={allPages}\n                                items={pages}\n                                setItems={setPages}\n                                tags={pageTags}\n                                activeTag={activePageTag}\n                                setActiveTag={setActivePageTag}\n                                sortItemsByTag={sortPagesByTag}\n                                handleItemSortBy={handlePageSortBy}\n                                itemSortBy={pageSortBy}\n                                // fav templates\n                                favIds={favIds}\n                                handleFavTemplate={handleFavTemplate}\n                            />\n                        )}\n                        {\n                            // favorites\n                            activeTab === 'favorites' && (\n                                <TemplatesLoader\n                                    TABS={TABS}\n                                    activeTab={activeTab}\n                                    setActiveTab={setActiveTab}\n                                    searchText={searchText}\n                                    setSearchText={setSearchText}\n                                    pullDemos={pullDemos}\n                                    setPullDemos={setPullDemos}\n                                    pullNewDemos={pullNewDemos}\n                                    setIsOpen={setIsOpen}\n                                    number={number}\n                                    setNumber={setNumber}\n                                    loading={loading}\n                                    handleImportTemplate={handleImportTemplate}\n                                    type={favType}\n                                    setType={setFavType}\n                                    categories={favCategories}\n                                    activeCat={activeFavCat}\n                                    setActiveCat={setActiveFavCat}\n                                    allItems={allFavItems}\n                                    items={favItems}\n                                    setItems={setFavItems}\n                                    tags={favTags}\n                                    activeTag={activeFavTag}\n                                    setActiveTag={setActiveFavTag}\n                                    sortItemsByTag={sortFavByTag}\n                                    handleItemSortBy={handleFavSortBy}\n                                    itemSortBy={favSortBy}\n                                    // fav templates\n                                    favIds={favIds}\n                                    handleFavTemplate={handleFavTemplate}\n                                />\n                            )\n                        }\n                        {loading && <PreLoader />}\n                    </div>\n                </Modal>\n            )}\n        </div>\n    );\n}\n\nregisterPlugin('zoloblocks-template-library-button', {\n    render: ZoloBlocksTemplateLibraryButton,\n});\n"],"names":["Tooltip","__","classNames","ProPopup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InnerTemplate","templates","handleImportTemplate","favIds","handleFavTemplate","className","children","length","map","template","index","demo_preview","src","alt","title","loading","decoding","status","zoloParams","zolo_pro_status","demo_link","text","placement","href","target","xmlns","width","height","fill","viewBox","stroke","strokeWidth","d","onClick","json_file","strokeLinecap","strokeLinejoin","Array","isArray","includes","id","InnerPageTemplate","PageTemplateLoader","TABS","activeTab","setActiveTab","searchText","setSearchText","pullDemos","setPullDemos","pullNewDemos","setIsOpen","number","setNumber","type","setType","categories","activeCat","setActiveCat","allItems","items","setItems","itemText","category","active","value","label","fillRule","clipRule","tab","placeholder","onChange","e","color","SinglePageTemplate","pages","isPro","some","page","useState","PagesPreview","pagesPanel","setPagesPanel","templateName","activePage","setActivePage","PreLoader","in","stdDeviation","result","mode","values","in2","Modal","proModal","setProModal","onRequestClose","x1","y1","x2","y2","gradientUnits","stopColor","offset","BaseControl","SelectControl","TemplatesLoader","tags","activeTag","setActiveTag","sortItemsByTag","handleItemSortBy","itemSortBy","categoryTypes","filter","fav","options","v","tag","split","word","charAt","toUpperCase","slice","join","transform","apiFetch","Button","subscribe","useSelect","getTextContent","useEffect","registerPlugin","createRoot","ZoloBlocksTemplateLibraryButton","isOpen","allTemplates","setAllTemplates","setLoading","total","setTotal","currentPostType","setCurrentPostType","wp","data","select","getCurrentPostType","allPageTemplates","setAllPageTemplates","pageTemplates","setPageTemplates","pageTemplatesType","setPageTemplatesType","pageTemplateCategories","setPageTemplateCategories","activePageTemplateCat","setActivePageTemplateCat","isPageEmpty","getBlocks","blocks","firstBlock","name","attributes","content","path","method","then","response","allAvailablePagesTemplates","Object","entries","key","sortedPageTemplateCategories","sort","a","b","localeCompare","pageTemplateCategoriesArray","unshift","filteredPageTemplates","allPatterns","setAllPatterns","patterns","setPatterns","patternsType","setPatternsType","patternCategories","setPatternCategories","activePatternCat","setActivePatternCat","patternTags","setPatternTags","activePatternTag","setActivePatternTag","patternSortBy","setPatternSortBy","filteredPatterns","patterns_category","sortPatternsByTag","handlePatternSortBy","sortedPatterns","Date","created","allPages","setAllPages","setPages","pagesType","setPagesType","pageCategories","setPageCategories","activePageCat","setActivePageCat","pageTags","setPageTags","activePageTag","setActivePageTag","pageSortBy","setPageSortBy","filteredPages","pages_category","sortPagesByTag","handlePageSortBy","sortedPages","allDemos","setAllDemos","demos","setDemos","demosType","setDemosType","demoCategories","setDemoCategories","activeDemoCat","setActiveDemoCat","demoTags","setDemoTags","activeDemoTag","setActiveDemoTag","demoSortBy","setDemoSortBy","filteredDemos","demos_category","toolbar","document","querySelector","libraryButton","renderButton","setTimeout","classList","add","remove","sortDemosByTag","handleDemoSortBy","sortedDemos","setFavIds","allFavItems","setAllFavItems","favItems","setFavItems","favType","setFavType","favCategories","setFavCategories","activeFavCat","setActiveFavCat","favTags","setFavTags","activeFavTag","setActiveFavTag","favSortBy","setFavSortBy","favStatus","setFavStatus","fetchSettings","error","console","templateID","fav_id","zolo_nonce","filteredFav","filteredFavs","sortFavByTag","handleFavSortBy","sortedFavs","allFavItemsData","uniqueFavCategories","Set","flat","sortedFavCategories","favCategoriesArray","findIndex","splice","allFavTags","reduce","acc","sortedFavTags","keys","fetchTemplates","log","template_type","uniquePageCategories","sortedPageCategories","pageCategoriesArray","allPageTags","sortedPageTags","fetchDemoTemplates","prev","uniquePatternCategories","sortedPatternCategories","patternCategoriesArray","allPatternTags","sortedPatternTags","uniqueDemoCategories","sortedDemoCategories","demoCategoriesArray","allDemoTags","sortedDemoTags","jQuery","ajax","url","ajaxurl","nonce","action","success","toLowerCase","jsonFile","security","json_file_url","parse","selectedBlock","getSelectedBlock","dispatch","replaceBlocks","clientId","insertBlocks","LibraryButton","selector","createElement","append","render","shouldCloseOnClickOutside","shouldCloseOnEsc","isDismissible"],"sourceRoot":""}