{"version":3,"file":"blocks/social-count/frontend.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACxD,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,4CAA4C,CAAC;EAExFD,QAAQ,CAACE,OAAO,CAACC,cAAc,IAAI;IACjC,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,cAAc,CAACG,WAAW,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IACjFC,cAAc,CAACL,cAAc,EAAE,CAAC,EAAEC,QAAQ,EAAE,IAAI,CAAC;EACnD,CAAC,CAAC;;EAEF;EACA,SAASI,cAAcA,CAACC,OAAO,EAAEC,UAAU,EAAEN,QAAQ,EAAEO,QAAQ,EAAE;IAC/D,IAAIC,SAAS,GAAG,IAAI;IAEpB,SAASC,IAAIA,CAACC,WAAW,EAAE;MACzB,IAAI,CAACF,SAAS,EAAEA,SAAS,GAAGE,WAAW;MAEvC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACH,WAAW,GAAGF,SAAS,IAAID,QAAQ,EAAE,CAAC,CAAC;MAClE,MAAMO,YAAY,GAAGF,IAAI,CAACG,IAAI,CAACJ,QAAQ,IAAIX,QAAQ,GAAGM,UAAU,CAAC,GAAGA,UAAU,CAAC;MAE/ED,OAAO,CAACH,WAAW,GAAGc,YAAY,CAACF,YAAY,CAAC;MAEhD,IAAIH,QAAQ,GAAG,CAAC,EAAE;QAChBM,MAAM,CAACC,qBAAqB,CAACT,IAAI,CAAC;MACpC;IACF;IAEAQ,MAAM,CAACC,qBAAqB,CAACT,IAAI,CAAC;EACpC;;EAEF;EACE,SAASO,YAAYA,CAACG,KAAK,EAAE;IAC3BA,KAAK,GAAGC,UAAU,CAACD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAClB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC5D,IAAIgB,KAAK,IAAI,GAAG,EAAE,OAAOP,IAAI,CAACG,IAAI,CAACI,KAAK,CAAC;IAEzC,MAAMG,KAAK,GAAG,CACZ;MAACH,KAAK,EAAE,GAAG;MAAEI,MAAM,EAAE;IAAG,CAAC,EACzB;MAACJ,KAAK,EAAE,GAAG;MAAEI,MAAM,EAAE;IAAG,CAAC,EACzB;MAACJ,KAAK,EAAE,GAAG;MAAEI,MAAM,EAAE;IAAG,CAAC,EACzB;MAACJ,KAAK,EAAE,IAAI;MAAEI,MAAM,EAAE;IAAG,CAAC,EAC1B;MAACJ,KAAK,EAAE,IAAI;MAAEI,MAAM,EAAE;IAAG,CAAC,EAC1B;MAACJ,KAAK,EAAE,IAAI;MAAEI,MAAM,EAAE;IAAG,CAAC,CAC3B;IAED,MAAMC,IAAI,GAAGF,KAAK,CAACG,IAAI,CAAC,CAACD,IAAI,EAAEE,KAAK,KAAKP,KAAK,IAAIK,IAAI,CAACL,KAAK,KAAKO,KAAK,KAAKJ,KAAK,CAACK,MAAM,GAAG,CAAC,IAAIR,KAAK,GAAGG,KAAK,CAACI,KAAK,GAAG,CAAC,CAAC,CAACP,KAAK,CAAC,CAAC;IAE/H,OAAO,CAACA,KAAK,GAAGK,IAAI,CAACL,KAAK,EACvBS,OAAO,CAAC,CAAC,CAAC,CACVzB,OAAO,CAAC,0BAA0B,EAAE,IAAI,CAAC,GAAGqB,IAAI,CAACD,MAAM;EAC5D;AACF,CAAC,CAAC,C","sources":["webpack://zoloblocks/./src/blocks/social-count/frontend.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n  const counters = document.querySelectorAll(\".wp-block-zolo-social-count .counter-value\");\n\n  counters.forEach(counterElement => {\n    const endValue = parseInt(counterElement.textContent.replace(/[^0-9.]/g, \"\"), 10);\n    animateCounter(counterElement, 0, endValue, 3000);\n  });\n\n  //animate number\n  function animateCounter(element, startValue, endValue, duration) {\n    let startTime = null;\n\n    function step(currentTime) {\n      if (!startTime) startTime = currentTime;\n\n      const progress = Math.min((currentTime - startTime) / duration, 1);\n      const currentValue = Math.ceil(progress * (endValue - startValue) + startValue);\n\n      element.textContent = formatNumber(currentValue);\n\n      if (progress < 1) {\n        window.requestAnimationFrame(step);\n      }\n    }\n\n    window.requestAnimationFrame(step);\n  }\n\n//format number\n  function formatNumber(value) {\n    value = parseFloat(value.toString().replace(/[^0-9.]/g, \"\"));\n    if (value <= 999) return Math.ceil(value);\n\n    const units = [\n      {value: 1e3, suffix: \"K\"},\n      {value: 1e6, suffix: \"M\"},\n      {value: 1e9, suffix: \"B\"},\n      {value: 1e12, suffix: \"T\"},\n      {value: 1e15, suffix: \"P\"},\n      {value: 1e18, suffix: \"E\"},\n    ];\n\n    const unit = units.find((unit, index) => value >= unit.value && (index === units.length - 1 || value < units[index + 1].value));\n\n    return (value / unit.value)\n      .toFixed(2)\n      .replace(/\\.0+$|(\\.[0-9]*[1-9])0+$/, \"$1\") + unit.suffix;\n  }\n});\n"],"names":["document","addEventListener","counters","querySelectorAll","forEach","counterElement","endValue","parseInt","textContent","replace","animateCounter","element","startValue","duration","startTime","step","currentTime","progress","Math","min","currentValue","ceil","formatNumber","window","requestAnimationFrame","value","parseFloat","toString","units","suffix","unit","find","index","length","toFixed"],"sourceRoot":""}