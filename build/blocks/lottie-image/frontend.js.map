{"version":3,"file":"blocks/lottie-image/frontend.js","mappings":"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","sources":["webpack://zoloblocks/./src/blocks/lottie-image/frontend.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const lottieImages = document.querySelectorAll('.wp-block-zolo-lottie-image');\n\n    lottieImages.forEach((lottie) => {\n        const options = JSON.parse(lottie.dataset?.settings || '{}');\n        const lottiePlayer = lottie.querySelector('lottie-player');\n        const reverse = lottiePlayer?.getAttribute('direction') === '-1';\n\n        const checkLottieLoaded = () => {\n            if (lottiePlayer?._lottie) {\n                const { totalFrames, goToAndStop } = lottiePlayer._lottie;\n\n                window.addEventListener('scroll', () => {\n                    const { top, bottom } = lottiePlayer.getBoundingClientRect();\n                    const windowHeight = window.innerHeight;\n\n                    const isInView = top < windowHeight && bottom > 0;\n                    if (isInView) {\n                        const progress = Math.min(Math.max((window.scrollY + windowHeight - top) / (bottom - top + windowHeight), 0), 1);\n                        let newFrame = Math.round(progress * totalFrames);\n                        if (reverse) newFrame = totalFrames - newFrame;\n                        if (newFrame < totalFrames) goToAndStop.call(lottiePlayer._lottie, newFrame, true);\n                    }\n                });\n            } else {\n                setTimeout(checkLottieLoaded, 100);\n            }\n        };\n\n        if (lottiePlayer) {\n            let isAnimationComplete = true;\n            lottiePlayer.addEventListener('complete', () => {\n                isAnimationComplete = true;\n            });\n\n            if (options?.trigger === 'click') {\n                lottiePlayer.addEventListener('click', () => {\n                    if (isAnimationComplete || lottiePlayer.currentFrame === 0) {\n                        lottiePlayer.stop();\n                        lottiePlayer.play();\n                        isAnimationComplete = false;\n                    }\n                });\n            }\n\n            if (options?.trigger === 'scroll') checkLottieLoaded();\n            if(options?.trigger === 'viewport') {\n                const observer = new IntersectionObserver((entries) => {\n                    entries.forEach((entry) => {\n                        if (entry.isIntersecting) {\n                                lottiePlayer.play();\n\n                        } else {\n                               lottiePlayer.pause();\n\n                        }\n                    });\n                });\n\n                observer.observe(lottie);\n            }\n        }\n    });\n});\n"],"names":["document","addEventListener","lottieImages","querySelectorAll","forEach","lottie","options","JSON","parse","dataset","settings","lottiePlayer","querySelector","reverse","getAttribute","checkLottieLoaded","_lottie","totalFrames","goToAndStop","window","top","bottom","getBoundingClientRect","windowHeight","innerHeight","isInView","progress","Math","min","max","scrollY","newFrame","round","call","setTimeout","isAnimationComplete","trigger","currentFrame","stop","play","observer","IntersectionObserver","entries","entry","isIntersecting","pause","observe"],"sourceRoot":""}